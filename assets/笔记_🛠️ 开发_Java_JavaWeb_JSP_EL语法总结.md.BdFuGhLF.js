import{_ as h,c as k,J as i,m as s,a as t,V as l,o as d,E as a}from"./chunks/framework.WH0rnJL5.js";const _=JSON.parse('{"title":"EL表达式","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/🛠️ 开发/Java/JavaWeb/JSP/EL语法总结.md","filePath":"笔记/🛠️ 开发/Java/JavaWeb/JSP/EL语法总结.md"}'),r={name:"笔记/🛠️ 开发/Java/JavaWeb/JSP/EL语法总结.md"},o=s("h1",{id:"el表达式",tabindex:"-1"},[t("EL表达式 "),s("a",{class:"header-anchor",href:"#el表达式","aria-label":'Permalink to "EL表达式"'},"​")],-1),g=l(`<h2 id="_1-基础语法" tabindex="-1">1.基础语法 <a class="header-anchor" href="#_1-基础语法" aria-label="Permalink to &quot;1.基础语法&quot;">​</a></h2><ul><li>El表达式表达属性值的方式:</li></ul><div class="language-jsp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsp</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>\${expr}</span></span></code></pre></div><ul><li>El表达式能够引用的对象: <ul><li>Lambda</li><li>El</li><li>Managed beans</li><li>Implicit objects</li><li>Classes of static fields and methods</li></ul></li></ul><p>引用对象属性或者集合元素,可以使用<code>.</code>或者<code>[]</code>表示</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">customer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">\${customer[</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">]}</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//在[]之中的也可以是字符串表达式或者动态取值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">\${customer[</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;abc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">]}</span></span></code></pre></div><h3 id="_1-1-判断和比较" tabindex="-1">1.1 判断和比较 <a class="header-anchor" href="#_1-1-判断和比较" aria-label="Permalink to &quot;1.1 判断和比较&quot;">​</a></h3><p>比较方式都是双等==,表达式之中并没有equals。</p><p><strong>判断对象是否为空:</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">\${empty 对象名}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">\${对象名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span></code></pre></div><p>对空值的处理并不显示,<code>\${变量名}</code>当该变量为空获取不到值的时候不显示。</p><p>表示中不能有Java代码且运算只能数字+数字，el中没有++和--</p><h2 id="_2-操作符" tabindex="-1">2.操作符 <a class="header-anchor" href="#_2-操作符" aria-label="Permalink to &quot;2.操作符&quot;">​</a></h2><ul><li><p><strong>常见操作符</strong></p><table><thead><tr><th>类型</th><th>符号</th></tr></thead><tbody><tr><td>算术型</td><td>+、-、*、/、div、%、mod、-</td></tr><tr><td>逻辑型</td><td>and、&amp;&amp;、or、||、！、not</td></tr><tr><td>关系型</td><td>==、eq、!=、ne、&lt;、lt、&gt;、gt、&lt;=、le、&gt;=、ge。</td></tr><tr><td>条件</td><td>三目运算符 a?b:c</td></tr><tr><td>空</td><td>empty 用来判断是否为空</td></tr></tbody></table></li><li><p><strong>运算符优先级</strong>(从高到低、从左到右)</p><ol><li><p><code>[] .</code></p></li><li><p><code>()</code>:可以用来更改运算符优先级</p></li><li><p><code>-、not ! empty</code></p></li><li><p><code>* / div % mod</code></p></li><li><p><code>+ -</code></p></li><li><p><code>+=</code></p></li><li><p><code>&lt;&gt; &lt;= &gt;= lt gt le ge</code></p></li><li><p><code>== != eq ne</code></p></li><li><p><code>&amp;&amp; and</code></p></li><li><p><code>|| or</code></p></li><li><p><code>? :</code>(三目运算符)</p></li><li><p><code>-&gt;</code></p></li><li><p><code>=</code></p></li><li><p><code>;</code></p></li></ol></li><li><p><strong>保留运算符</strong></p><ul><li>true</li><li>false</li><li>null</li><li>instanceof</li><li>empty</li><li>div</li><li>mod</li></ul></li></ul><h2 id="_3-函数" tabindex="-1">3.函数 <a class="header-anchor" href="#_3-函数" aria-label="Permalink to &quot;3.函数&quot;">​</a></h2><p><strong>使用函数</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">\${ns</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(param1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">param2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,...</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">)}</span></span></code></pre></div><p><strong>调用Java函数</strong></p><p>创建一个类</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> ELFunc</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> hell</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> s</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> s;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>创建一个xld</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;?</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">xml</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;1.0&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> encoding</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ?&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">taglib</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> xmlns</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;">        xmlns:xsi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;">        xsi:schemaLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">tlib-version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;1.0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">tlib-version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">short-name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;ELFunc&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">short-name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;http://www.me7eorite.com/ELFunc&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;hello&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">function-class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;ELFunc&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">function-class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">function-signature</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;java.lang.String hello(java.lang.String)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">function-signature</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">taglib</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>jsp使用的语法</p><div class="language-jsp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsp</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;%@ page contextType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span></span>
<span class="line"><span>&lt;%@ taglib prefix=&quot;ELFunc&quot; uri=&quot;http://www.test.com/ELFunc&quot; %&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\${ELFunc:hello(&quot;hello world&quot;)}</span></span></code></pre></div><h2 id="_4-隐含对象" tabindex="-1">4.隐含对象 <a class="header-anchor" href="#_4-隐含对象" aria-label="Permalink to &quot;4.隐含对象&quot;">​</a></h2>`,25),c=s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"隐含对象"),s("th",null,"描述"),s("th",null,"使用方式")])]),s("tbody",null,[s("tr",{"pageContext.request.queryString":""},[s("td",null,"pageContext"),s("td",null,"page作用域.PageContext实例对应于当前页面的处理。pageContext对象是JSP中pageContext对象的引用，通过pageContext对象可以访问request对象"),s("td",null,"$")]),s("tr",null,[s("td",null,"requestScope"),s("td",null,"request作用域.与请求作用域属性的名称和值相关量的Map类"),s("td")]),s("tr",null,[s("td",null,"sessionScope"),s("td",null,"session作用域.与会话作用域属性的名称和值相关联的Map类"),s("td")]),s("tr",null,[s("td",null,"applicationScope"),s("td",null,"application作用域.与应用程序作用域的名称和值相关联的Map类"),s("td")]),s("tr",null,[s("td",null,"param"),s("td",null,"按名称存储请求参数的主要值Map类"),s("td")]),s("tr",null,[s("td",null,"paramValues"),s("td",null,"将请求参数的所有值作为String数组存储的Map类"),s("td")]),s("tr",null,[s("td",null,"headerValues"),s("td",null,"将请求投的所有值作为String数组存储的Map类"),s("td")]),s("tr",null,[s("td",null,"initParam"),s("td",null,"按名称存储Web应用程序上下文初始化参数的Map类"),s("td")]),s("tr",null,[s("td",null,"cookie"),s("td",null,"按名称存储请求附带cookie的Map类"),s("td")]),s("tr",null,[s("td",null,"header"),s("td",null,"按名称存储请求头主要值的Map类"),s("td")]),s("tr",null,[s("td"),s("td"),s("td")])])],-1),u=l(`<p>JSP存在9个隐式对象:</p><table><thead><tr><th>request</th><th>HttpServletRequest接口的实例</th></tr></thead><tbody><tr><td>response</td><td>HttpServletResponse接口的实例</td></tr><tr><td>out</td><td>JspWriter类的实例，用于把结果输出到网页上</td></tr><tr><td>session</td><td>HttpSession类的实例</td></tr><tr><td>application</td><td>ServletContext类的实例与应用上下文有关</td></tr><tr><td>config</td><td>ServletConfig类的实例</td></tr><tr><td>pageContext</td><td>PageContext类的实例,提供对Jsp页面所有对象以及命名空间的访问</td></tr><tr><td>page</td><td>类似于Java类中的this关键字</td></tr><tr><td>Exception</td><td>Exception类的对象，代表发生错误的Jsp页面中对应的异常对象。</td></tr></tbody></table><h2 id="_5-el表达使用" tabindex="-1">5.EL表达使用 <a class="header-anchor" href="#_5-el表达使用" aria-label="Permalink to &quot;5.EL表达使用&quot;">​</a></h2><p>当在jsp需要使用el表达式调用函数的时候需要用taglib引入标签库</p><p><strong>启动/禁用EL表达式</strong></p><p><strong>全局禁用EL表达式</strong></p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">jsp-config</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">jsp-property-group</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">url-pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;*.jsp&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">url-pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">el-ignored</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;true&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">el-ignored</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">jsp-property-group</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">jsp-config</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>单个文件禁用EL表达式,True表示禁止、False表示不禁止</p><div class="language-jsp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsp</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;%@ page isELIgnored=&quot;true&quot; %&gt;</span></span></code></pre></div><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>`,10),B=s("h2",{id:"文件历史",tabindex:"-1"},[t("文件历史 "),s("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function y(E,C,A,m,F,b){const n=a("NolebasePageProperties"),e=a("NolebaseGitContributors"),p=a("NolebaseGitChangelog");return d(),k("div",null,[o,i(n),g,c,u,i(e),B,i(p)])}const q=h(r,[["render",y]]);export{_ as __pageData,q as default};
